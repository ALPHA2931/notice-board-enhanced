version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: notice-board-db
    environment:
      POSTGRES_DB: notice_board
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - notice-board-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: notice-board-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/notice_board
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - notice-board-network
    volumes:
      - ./src/backend:/app/src/backend
      - ./config:/app/config
    restart: unless-stopped

  # Frontend React Service
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: notice-board-frontend
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_BACKEND_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - notice-board-network
    volumes:
      - ./src/frontend:/app/src/frontend
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  notice-board-network:
    driver: bridge
